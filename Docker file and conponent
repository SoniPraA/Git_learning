Docker File
Docker is a basically text file it contains some set of instruction.
Automation of Docker image creation

Docker Components
FROM => for base image this command must be on top of the docker file.

RUN => To execute command, it will create a layer in image

MAINTAINER => Author/Owner/Discription

COPY => Copy for local system (docker vm) We need to provide source, destination 
(We can't download file from internet and any remote repo)

ADD => Similar to COPY but, it provides a feature to download files from internet, also
we wxtract file at docker image side

EXPOSE => To expose ports such as port 8080 for tomcat, port 80 for nginx etc

WORKDIR => To set working directory for a container

ENTRYPOINT => Similar to CMD, but has higher priority over CMD forst commands will 
be executed by ENTRYPOINT only

ENV => Environment Variables

Docker file steps
1. Create a file names Dockerfile
2. Add instructions in Dockerfile
3. Build dockerfile to create image
4. Run image to create container

vi Dockerfile
FROM ubuntu
RUN echo "Technical guftgu" >/temp/testfile

To create image out of dockerfile
docker build -t myimg .
docker ps -a
docker images

Now, create container from the above image
docker run --name -it <new_name_container> myimg /bin/bash

cat /temp/testfile 